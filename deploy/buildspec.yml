version: 0.2
run-as: root
env:
    variables:
        "ECR": "843407916570.dkr.ecr.ap-southeast-2.amazonaws.com/umccr"
        "CONTAINER_NAME": "$ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH"
        "S3_REFDATA_BUCKET": "umccr-refdata-dev"
        "APP_NAME": "rnasum"
phases:
  install:
    runtime-versions:
      docker: 18
      python: 3.7
  pre_build:
    commands:
        - apk add --no-cache python3
        - apk add --no-cache git
        - pip3 install --no-cache --upgrade pip
        - pip3 install --no-cache --upgrade awscli
  build:
    commands:
      # Docker-in-docker bizarre AWS stuff: https://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker-custom-image.html
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      # Convenience CODEBUILD VARS, need more? Check https://github.com/thii/aws-codebuild-extras
      - export SHORT_COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-10)
      - export CODEBUILD_GIT_TAG="$(git describe --tags --exact-match 2>/dev/null)"
      - if [ -z $CODEBUILD_GIT_TAG ]; then export CODEBUILD_GIT_TAG='NOTAG'; fi
      - echo $CONTAINER_NAME
      # Build and tag (-t) image
      - docker build -t $ECR:$APP_NAME-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH -f envm/Dockerfile dockerfiles
  post_build:
    commands:
      # Run tests
      - $(aws ecr get-login --no-include-email --region ap-southeast-2)
      #- mkdir -p /codebuild/output/refdata && time aws s3 sync --exclude=*.pm --only-show-errors s3://$S3_REFDATA_BUCKET/genomes /codebuild/output/refdata/genomes
      # docker-slim image, remove the cruft from it
      #- docker run -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim --in-container build --http-probe=false $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH --tag $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH.slim
      # Run minimal test with downsized sample data
      #- docker run -t --cpus 4 -v=$PWD/umccrise_test_data/results/bcbio_test_project_docker:/output_dir
      #  -v=$PWD/umccrise_test_data/data/bcbio_test_project:/bcbio_project
      #  -v=/codebuild/output/refdata/genomes:/work/genomes
      #  $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH /bcbio_project -o /output_dir --genomes /work/genomes
      # Push both fat UMCCRISE container and Slim image to ECR if tests pass
      #- docker push $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH.slim
      - docker push $ECR:$APP_NAME-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH

#XXX: Not sure if rootless dind support is worth the effort here?:
# $ docker run -d --name dind-rootless --privileged docker:19.03-dind-rootless --experimental
